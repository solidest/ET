<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="ModuleContract">
      <assemblydata version="0.1.0.1" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>0.1.0.1</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:ET.Doc">
      <apidata name="ET.Doc" group="namespace" />
      <elements>
        <element api="T:ET.Doc.DirNode" />
        <element api="T:ET.Doc.ModuleFile" />
      </elements>
    </api>
    <api id="T:ET.Doc.DirNode">
      <apidata name="DirNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ET.Doc.DirNode.#ctor(System.String,ET.Doc.DirNode)" />
        <element api="P:ET.Doc.DirNode.NodeName" />
        <element api="P:ET.Doc.DirNode.ParentNode" />
        <element api="P:ET.Doc.DirNode.SubDirNodes" />
        <element api="P:ET.Doc.DirNode.SubModuleFiles" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
      </containers>
    </api>
    <api id="M:ET.Doc.DirNode.#ctor(System.String,ET.Doc.DirNode)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="nName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pNode">
          <type api="T:ET.Doc.DirNode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
        <type api="T:ET.Doc.DirNode" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Doc.DirNode.NodeName">
      <apidata name="NodeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NodeName" />
      <setter name="set_NodeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
        <type api="T:ET.Doc.DirNode" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Doc.DirNode.ParentNode">
      <apidata name="ParentNode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ParentNode" />
      <setter name="set_ParentNode" />
      <returns>
        <type api="T:ET.Doc.DirNode" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
        <type api="T:ET.Doc.DirNode" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Doc.DirNode.SubDirNodes">
      <apidata name="SubDirNodes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SubDirNodes" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:ET.Doc.DirNode" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
        <type api="T:ET.Doc.DirNode" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Doc.DirNode.SubModuleFiles">
      <apidata name="SubModuleFiles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SubModuleFiles" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:ET.Doc.ModuleFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
        <type api="T:ET.Doc.DirNode" ref="true" />
      </containers>
    </api>
    <api id="T:ET.Doc.ModuleFile">
      <apidata name="ModuleFile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ET.Doc.ModuleFile.#ctor(System.String,System.String,ET.Doc.DirNode,System.Byte[])" />
        <element api="P:ET.Doc.ModuleFile.ModuleKey" />
        <element api="P:ET.Doc.ModuleFile.FileName" />
        <element api="P:ET.Doc.ModuleFile.Content" />
        <element api="P:ET.Doc.ModuleFile.DirNode" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
      </containers>
    </api>
    <api id="M:ET.Doc.ModuleFile.#ctor(System.String,System.String,ET.Doc.DirNode,System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dir">
          <type api="T:ET.Doc.DirNode" ref="true" />
        </parameter>
        <parameter name="content" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
        <type api="T:ET.Doc.ModuleFile" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Doc.ModuleFile.Content">
      <apidata name="Content" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Content" />
      <setter name="set_Content" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
        <type api="T:ET.Doc.ModuleFile" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Doc.ModuleFile.DirNode">
      <apidata name="DirNode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DirNode" />
      <setter name="set_DirNode" />
      <returns>
        <type api="T:ET.Doc.DirNode" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
        <type api="T:ET.Doc.ModuleFile" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Doc.ModuleFile.FileName">
      <apidata name="FileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FileName" />
      <setter name="set_FileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
        <type api="T:ET.Doc.ModuleFile" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Doc.ModuleFile.ModuleKey">
      <apidata name="ModuleKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ModuleKey" />
      <setter name="set_ModuleKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Doc" />
        <type api="T:ET.Doc.ModuleFile" ref="true" />
      </containers>
    </api>
    <api id="N:ET.Interface">
      <apidata name="ET.Interface" group="namespace" />
      <elements>
        <element api="T:ET.Interface.ETPage" />
        <element api="T:ET.Interface.ETEventArgs" />
        <element api="T:ET.Interface.ICommModule" />
        <element api="T:ET.Interface.IViewDoc" />
        <element api="T:ET.Interface.ModuleHeaderAttribute" />
      </elements>
    </api>
    <api id="T:ET.Interface.ETEventArgs">
      <apidata name="ETEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ET.Interface.ETEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,ET.Interface.IViewDoc,System.Object)" />
        <element api="P:ET.Interface.ETEventArgs.EventHostVM" />
        <element api="P:ET.Interface.ETEventArgs.Tag" />
        <element api="M:System.Windows.RoutedEventArgs.OnSetSource(System.Object)">
          <apidata name="OnSetSource" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="source">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <apidata name="InvokeEventHandler" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="genericHandler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
            <parameter name="genericTarget">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.RoutedEventArgs.RoutedEvent">
          <apidata name="RoutedEvent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RoutedEvent" />
          <setter name="set_RoutedEvent" />
          <returns>
            <type api="T:System.Windows.RoutedEvent" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.RoutedEventArgs.Handled">
          <apidata name="Handled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Handled" />
          <setter name="set_Handled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.RoutedEventArgs.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource">
          <apidata name="OriginalSource" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_OriginalSource" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
      </containers>
    </api>
    <api id="M:ET.Interface.ETEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,ET.Interface.IViewDoc,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="routedEvent">
          <type api="T:System.Windows.RoutedEvent" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="eventHostVM">
          <type api="T:ET.Interface.IViewDoc" ref="true" />
        </parameter>
        <parameter name="tag" optional="true">
          <type api="T:System.Object" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ETEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Interface.ETEventArgs.EventHostVM">
      <apidata name="EventHostVM" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EventHostVM" />
      <returns>
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ETEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Interface.ETEventArgs.Tag">
      <apidata name="Tag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Tag" />
      <setter name="set_Tag" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ETEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:ET.Interface.ETPage">
      <apidata name="ETPage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.Grid" ref="true" />
          <type api="T:System.Windows.Controls.Panel" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:ET.Interface.ETPage.ETModuleFileSavedEvent" />
        <element api="F:ET.Interface.ETPage.ETModuleFileModifyEvent" />
        <element api="M:ET.Interface.ETPage.#ctor" />
        <element api="E:ET.Interface.ETPage.ETModuleFileSaved" />
        <element api="E:ET.Interface.ETPage.ETModuleFileModify" />
        <element api="M:System.Windows.Controls.Grid.GetVisualChild(System.Int32)">
          <apidata name="GetVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Controls.Panel.GetVisualChild(System.Int32)">
              <type api="T:System.Windows.Controls.Panel" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Grid" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Grid.MeasureOverride(System.Windows.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="constraint">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Grid" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="arrangeSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Grid" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Grid.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <apidata name="OnVisualChildrenChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Controls.Panel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
              <type api="T:System.Windows.Controls.Panel" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="visualAdded">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
            <parameter name="visualRemoved">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Grid" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Grid.LogicalChildren">
          <apidata name="LogicalChildren" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.Controls.Panel.LogicalChildren">
              <type api="T:System.Windows.Controls.Panel" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_LogicalChildren" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Grid" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Grid.ShowGridLines">
          <apidata name="ShowGridLines" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ShowGridLines" />
          <setter name="set_ShowGridLines" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Grid" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Grid.ColumnDefinitions">
          <apidata name="ColumnDefinitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ColumnDefinitions" />
          <returns>
            <type api="T:System.Windows.Controls.ColumnDefinitionCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Grid" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Grid.RowDefinitions">
          <apidata name="RowDefinitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_RowDefinitions" />
          <returns>
            <type api="T:System.Windows.Controls.RowDefinitionCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Grid" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Grid.VisualChildrenCount">
          <apidata name="VisualChildrenCount" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.Windows.Controls.Panel.VisualChildrenCount">
              <type api="T:System.Windows.Controls.Panel" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_VisualChildrenCount" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Grid" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Panel.OnRender(System.Windows.Media.DrawingContext)">
          <apidata name="OnRender" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="dc">
              <type api="T:System.Windows.Media.DrawingContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Panel" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Panel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
          <apidata name="OnIsItemsHostChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldIsItemsHost">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
            <parameter name="newIsItemsHost">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Panel" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Controls.Panel.CreateUIElementCollection(System.Windows.FrameworkElement)">
          <apidata name="CreateUIElementCollection" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="logicalParent">
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Controls.UIElementCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Panel" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Panel.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Panel" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Panel.Children">
          <apidata name="Children" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Children" />
          <returns>
            <type api="T:System.Windows.Controls.UIElementCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Panel" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Panel.IsItemsHost">
          <apidata name="IsItemsHost" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsItemsHost" />
          <setter name="set_IsItemsHost" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Panel" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Panel.LogicalOrientation">
          <apidata name="LogicalOrientation" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_LogicalOrientation" />
          <returns>
            <type api="T:System.Windows.Controls.Orientation" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Panel" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Panel.HasLogicalOrientation">
          <apidata name="HasLogicalOrientation" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HasLogicalOrientation" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Panel" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Controls.Panel.InternalChildren">
          <apidata name="InternalChildren" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InternalChildren" />
          <returns>
            <type api="T:System.Windows.Controls.UIElementCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Controls" />
            <type api="T:System.Windows.Controls.Panel" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <apidata name="OnStyleChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="oldStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
            <parameter name="newStyle">
              <type api="T:System.Windows.Style" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <apidata name="ParentLayoutInvalidated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <apidata name="BeginStoryboard" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="storyboard">
              <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
            <parameter name="isControllable">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="childName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <apidata name="FindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <apidata name="TryFindResource" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="resourceKey">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetResourceReference" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnPropertyChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <apidata name="OnVisualParentChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="oldParent">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding">
              <type api="T:System.Windows.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="path">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetUIParentCore">
          <apidata name="GetUIParentCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetUIParentCore">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <apidata name="BringIntoView" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="targetRectangle">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <apidata name="MeasureCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <apidata name="ArrangeCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <apidata name="OnRenderSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="sizeInfo">
              <type api="T:System.Windows.SizeChangedInfo" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <apidata name="GetLayoutClip" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="layoutSlotSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <apidata name="MoveFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="request">
              <type api="T:System.Windows.Input.TraversalRequest" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <apidata name="PredictFocus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="direction">
              <type api="T:System.Windows.Input.FocusNavigationDirection" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.UIElement" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.BeginInit">
          <apidata name="BeginInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.EndInit">
          <apidata name="EndInit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
              <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <apidata name="OnInitialized" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.EventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <apidata name="OnToolTipClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <apidata name="OnContextMenuClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <apidata name="RegisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="scopedElement">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
          <apidata name="UnregisterName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <apidata name="AddLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <apidata name="RemoveLogicalChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <apidata name="OverridesDefaultStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OverridesDefaultStyle" />
          <setter name="set_OverridesDefaultStyle" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:System.Windows.TriggerCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.TemplatedParent">
          <apidata name="TemplatedParent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TemplatedParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:System.Windows.ResourceDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <apidata name="InheritanceBehavior" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InheritanceBehavior" />
          <setter name="set_InheritanceBehavior" />
          <returns>
            <type api="T:System.Windows.InheritanceBehavior" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.BindingGroup">
          <apidata name="BindingGroup" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BindingGroup" />
          <setter name="set_BindingGroup" />
          <returns>
            <type api="T:System.Windows.Data.BindingGroup" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.Windows.Markup.XmlLanguage" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Windows.IFrameworkInputElement.Name">
              <type api="T:System.Windows.IFrameworkInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.InputScope">
          <apidata name="InputScope" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InputScope" />
          <setter name="set_InputScope" />
          <returns>
            <type api="T:System.Windows.Input.InputScope" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.LayoutTransform">
          <apidata name="LayoutTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LayoutTransform" />
          <setter name="set_LayoutTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
              <argument>
                <type api="T:System.Type" ref="true" />
                <typeValue>
                  <type api="T:System.Windows.LengthConverter" ref="true" />
                </typeValue>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:System.Windows.FlowDirection" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:System.Windows.Thickness" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:System.Windows.HorizontalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:System.Windows.VerticalAlignment" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <apidata name="FocusVisualStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_FocusVisualStyle" />
          <setter name="set_FocusVisualStyle" />
          <returns>
            <type api="T:System.Windows.Style" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Cursor">
          <apidata name="Cursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Cursor" />
          <setter name="set_Cursor" />
          <returns>
            <type api="T:System.Windows.Input.Cursor" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ForceCursor">
          <apidata name="ForceCursor" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ForceCursor" />
          <setter name="set_ForceCursor" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsInitialized">
          <apidata name="IsInitialized" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInitialized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.IsLoaded">
          <apidata name="IsLoaded" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsLoaded" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ToolTip">
          <apidata name="ToolTip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ToolTip" />
          <setter name="set_ToolTip" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.ContextMenu">
          <apidata name="ContextMenu" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ContextMenu" />
          <setter name="set_ContextMenu" />
          <returns>
            <type api="T:System.Windows.Controls.ContextMenu" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.TargetUpdated">
          <apidata name="TargetUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TargetUpdated" />
          <remover name="remove_TargetUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SourceUpdated">
          <apidata name="SourceUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SourceUpdated" />
          <remover name="remove_SourceUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <apidata name="RequestBringIntoView" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_RequestBringIntoView" />
          <remover name="remove_RequestBringIntoView" />
          <eventhandler>
            <type api="T:System.Windows.RequestBringIntoViewEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RequestBringIntoViewEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:System.Windows.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Initialized">
          <apidata name="Initialized" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Initialized" />
          <remover name="remove_Initialized" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipOpening">
          <apidata name="ToolTipOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipOpening" />
          <remover name="remove_ToolTipOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ToolTipClosing">
          <apidata name="ToolTipClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ToolTipClosing" />
          <remover name="remove_ToolTipClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ToolTipEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ToolTipEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <apidata name="ContextMenuOpening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuOpening" />
          <remover name="remove_ContextMenuOpening" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <apidata name="ContextMenuClosing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ContextMenuClosing" />
          <remover name="remove_ContextMenuClosing" />
          <eventhandler>
            <type api="T:System.Windows.Controls.ContextMenuEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Controls.ContextMenuEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="ApplyAnimationClock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="clock">
              <type api="T:System.Windows.Media.Animation.AnimationClock" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <apidata name="BeginAnimation" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="animation">
              <type api="T:System.Windows.Media.Animation.AnimationTimeline" ref="true" />
            </parameter>
            <parameter name="handoffBehavior">
              <type api="T:System.Windows.Media.Animation.HandoffBehavior" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)">
          <apidata name="RaiseEvent" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
            <parameter name="handledEventsToo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent">
              <type api="T:System.Windows.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler">
              <type api="T:System.Delegate" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
          <apidata name="AddToEventRoute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="route">
              <type api="T:System.Windows.EventRoute" ref="true" />
            </parameter>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseLeftButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnPreviewMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
          <apidata name="OnMouseRightButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnPreviewMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnPreviewMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
          <apidata name="OnMouseWheel" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnMouseLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnGotMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
          <apidata name="OnLostMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
          <apidata name="OnQueryCursor" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnPreviewStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)">
          <apidata name="OnStylusDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInAirMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusInRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnPreviewStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnStylusOutOfRange" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnPreviewStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
          <apidata name="OnStylusSystemGesture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnGotStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)">
          <apidata name="OnLostStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)">
          <apidata name="OnPreviewStylusButtonUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnPreviewKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnGotKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnPreviewLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
          <apidata name="OnLostKeyboardFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnPreviewTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <apidata name="OnTextInput" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnPreviewQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
          <apidata name="OnQueryContinueDrag" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnPreviewGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
          <apidata name="OnGiveFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)">
          <apidata name="OnPreviewDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchMove" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnPreviewTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnGotTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnLostTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)">
          <apidata name="OnTouchLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsMouseCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusDirectlyOverChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCapturedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsStylusCaptureWithinChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <apidata name="OnIsKeyboardFocusedChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InvalidateVisual">
          <apidata name="InvalidateVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)">
          <apidata name="OnChildDesiredSizeChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="availableSize">
              <type api="T:System.Windows.Size" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="finalRect">
              <type api="T:System.Windows.Rect" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)">
          <apidata name="TranslatePoint" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
            <parameter name="relativeTo">
              <type api="T:System.Windows.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)">
          <apidata name="InputHitTest" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.IInputElement" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureMouse">
          <apidata name="CaptureMouse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureMouse">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture">
          <apidata name="ReleaseMouseCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureStylus">
          <apidata name="CaptureStylus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.CaptureStylus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseStylusCapture">
          <apidata name="ReleaseStylusCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Windows.IInputElement.ReleaseStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.Focus">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Windows.IInputElement.Focus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <apidata name="OnAccessKey" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.AccessKeyEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.PointHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.HitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <apidata name="HitTestCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="hitTestParameters">
              <type api="T:System.Windows.Media.GeometryHitTestParameters" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeometryHitTestResult" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Windows.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <apidata name="OnManipulationBoundaryFeedback" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e">
              <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)">
          <apidata name="CaptureTouch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)">
          <apidata name="ReleaseTouchCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="touchDevice">
              <type api="T:System.Windows.Input.TouchDevice" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.UIElement.ReleaseAllTouchCaptures">
          <apidata name="ReleaseAllTouchCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.HasAnimatedProperties">
          <apidata name="HasAnimatedProperties" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_HasAnimatedProperties" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties">
              <type api="T:System.Windows.Media.Animation.IAnimatable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.InputBindings">
          <apidata name="InputBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InputBindings" />
          <returns>
            <type api="T:System.Windows.Input.InputBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.CommandBindings">
          <apidata name="CommandBindings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_CommandBindings" />
          <returns>
            <type api="T:System.Windows.Input.CommandBindingCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.StylusPlugIns">
          <apidata name="StylusPlugIns" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_StylusPlugIns" />
          <returns>
            <type api="T:System.Windows.Input.StylusPlugIns.StylusPlugInCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMeasureValid">
          <apidata name="IsMeasureValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMeasureValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsArrangeValid">
          <apidata name="IsArrangeValid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsArrangeValid" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderSize" />
          <setter name="set_RenderSize" />
          <returns>
            <type api="T:System.Windows.Size" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseDirectlyOver">
          <apidata name="IsMouseDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseOver">
          <apidata name="IsMouseOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusOver">
          <apidata name="IsStylusOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocusWithin">
          <apidata name="IsKeyboardFocusWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocusWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocusWithin">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptured">
          <apidata name="IsMouseCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsMouseCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsMouseCaptureWithin">
          <apidata name="IsMouseCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsMouseCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusDirectlyOver">
          <apidata name="IsStylusDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusDirectlyOver">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptured">
          <apidata name="IsStylusCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsStylusCaptured">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsStylusCaptureWithin">
          <apidata name="IsStylusCaptureWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsStylusCaptureWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsKeyboardFocused">
          <apidata name="IsKeyboardFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_IsKeyboardFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsKeyboardFocused">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsInputMethodEnabled">
          <apidata name="IsInputMethodEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsInputMethodEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.OpacityMask">
          <apidata name="OpacityMask" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OpacityMask" />
          <setter name="set_OpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffect">
          <apidata name="BitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffect" />
          <setter name="set_BitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.Effect">
          <apidata name="Effect" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Effect" />
          <setter name="set_Effect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.BitmapEffectInput">
          <apidata name="BitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BitmapEffectInput" />
          <setter name="set_BitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Uid">
          <apidata name="Uid" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Uid" />
          <setter name="set_Uid" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:System.Windows.Visibility" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.ClipToBounds">
          <apidata name="ClipToBounds" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ClipToBounds" />
          <setter name="set_ClipToBounds" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.SnapsToDevicePixels">
          <apidata name="SnapsToDevicePixels" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SnapsToDevicePixels" />
          <setter name="set_SnapsToDevicePixels" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsFocused">
          <apidata name="IsFocused" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsFocused" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.IsEnabled">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsEnabledCore">
          <apidata name="IsEnabledCore" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsEnabledCore" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.IsVisible">
          <apidata name="IsVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.Focusable">
          <apidata name="Focusable" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Focusable" />
          <setter name="set_Focusable" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Windows.IInputElement.Focusable">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.PersistId">
          <apidata name="PersistId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_PersistId" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.UIElement.IsManipulationEnabled">
          <apidata name="IsManipulationEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_IsManipulationEnabled" />
          <setter name="set_IsManipulationEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesOver">
          <apidata name="AreAnyTouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver">
          <apidata name="AreAnyTouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesDirectlyOver" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin">
          <apidata name="AreAnyTouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCapturedWithin" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.AreAnyTouchesCaptured">
          <apidata name="AreAnyTouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_AreAnyTouchesCaptured" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCaptured">
          <apidata name="TouchesCaptured" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCaptured" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesCapturedWithin">
          <apidata name="TouchesCapturedWithin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesCapturedWithin" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesOver">
          <apidata name="TouchesOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.UIElement.TouchesDirectlyOver">
          <apidata name="TouchesDirectlyOver" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_TouchesDirectlyOver" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchDevice" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseDown">
          <apidata name="PreviewMouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseDown" />
          <remover name="remove_PreviewMouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseDown">
          <apidata name="MouseDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseDown" />
          <remover name="remove_MouseDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseUp">
          <apidata name="PreviewMouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseUp" />
          <remover name="remove_PreviewMouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseUp">
          <apidata name="MouseUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseUp" />
          <remover name="remove_MouseUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonDown">
          <apidata name="PreviewMouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonDown" />
          <remover name="remove_PreviewMouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown">
          <apidata name="MouseLeftButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonDown" />
          <remover name="remove_MouseLeftButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseLeftButtonUp">
          <apidata name="PreviewMouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseLeftButtonUp" />
          <remover name="remove_PreviewMouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp">
          <apidata name="MouseLeftButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeftButtonUp" />
          <remover name="remove_MouseLeftButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeftButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonDown">
          <apidata name="PreviewMouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonDown" />
          <remover name="remove_PreviewMouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonDown">
          <apidata name="MouseRightButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonDown" />
          <remover name="remove_MouseRightButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseRightButtonUp">
          <apidata name="PreviewMouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseRightButtonUp" />
          <remover name="remove_PreviewMouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseRightButtonUp">
          <apidata name="MouseRightButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseRightButtonUp" />
          <remover name="remove_MouseRightButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseRightButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseMove">
          <apidata name="PreviewMouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseMove" />
          <remover name="remove_PreviewMouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseMove">
          <apidata name="MouseMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseMove" />
          <remover name="remove_MouseMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewMouseWheel">
          <apidata name="PreviewMouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewMouseWheel" />
          <remover name="remove_PreviewMouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewMouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseWheel">
          <apidata name="MouseWheel" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseWheel" />
          <remover name="remove_MouseWheel" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseWheel">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseEnter">
          <apidata name="MouseEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseEnter" />
          <remover name="remove_MouseEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.MouseLeave">
          <apidata name="MouseLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_MouseLeave" />
          <remover name="remove_MouseLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.MouseLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotMouseCapture">
          <apidata name="GotMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotMouseCapture" />
          <remover name="remove_GotMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostMouseCapture">
          <apidata name="LostMouseCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostMouseCapture" />
          <remover name="remove_LostMouseCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostMouseCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryCursor">
          <apidata name="QueryCursor" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryCursor" />
          <remover name="remove_QueryCursor" />
          <eventhandler>
            <type api="T:System.Windows.Input.QueryCursorEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.QueryCursorEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusDown">
          <apidata name="PreviewStylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusDown" />
          <remover name="remove_PreviewStylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusDown">
          <apidata name="StylusDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusDown" />
          <remover name="remove_StylusDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusDownEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusDownEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusUp">
          <apidata name="PreviewStylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusUp" />
          <remover name="remove_PreviewStylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusUp">
          <apidata name="StylusUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusUp" />
          <remover name="remove_StylusUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusMove">
          <apidata name="PreviewStylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusMove" />
          <remover name="remove_PreviewStylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusMove">
          <apidata name="StylusMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusMove" />
          <remover name="remove_StylusMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInAirMove">
          <apidata name="PreviewStylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInAirMove" />
          <remover name="remove_PreviewStylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInAirMove">
          <apidata name="StylusInAirMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInAirMove" />
          <remover name="remove_StylusInAirMove" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInAirMove">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusEnter">
          <apidata name="StylusEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusEnter" />
          <remover name="remove_StylusEnter" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusEnter">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusLeave">
          <apidata name="StylusLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusLeave" />
          <remover name="remove_StylusLeave" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusLeave">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusInRange">
          <apidata name="PreviewStylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusInRange" />
          <remover name="remove_PreviewStylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusInRange">
          <apidata name="StylusInRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusInRange" />
          <remover name="remove_StylusInRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusInRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusOutOfRange">
          <apidata name="PreviewStylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusOutOfRange" />
          <remover name="remove_PreviewStylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusOutOfRange">
          <apidata name="StylusOutOfRange" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusOutOfRange" />
          <remover name="remove_StylusOutOfRange" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusOutOfRange">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusSystemGesture">
          <apidata name="PreviewStylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusSystemGesture" />
          <remover name="remove_PreviewStylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusSystemGesture">
          <apidata name="StylusSystemGesture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusSystemGesture" />
          <remover name="remove_StylusSystemGesture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusSystemGestureEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusSystemGestureEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusSystemGesture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotStylusCapture">
          <apidata name="GotStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotStylusCapture" />
          <remover name="remove_GotStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostStylusCapture">
          <apidata name="LostStylusCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostStylusCapture" />
          <remover name="remove_LostStylusCapture" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostStylusCapture">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonDown">
          <apidata name="StylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonDown" />
          <remover name="remove_StylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.StylusButtonUp">
          <apidata name="StylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_StylusButtonUp" />
          <remover name="remove_StylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.StylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonDown">
          <apidata name="PreviewStylusButtonDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonDown" />
          <remover name="remove_PreviewStylusButtonDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewStylusButtonUp">
          <apidata name="PreviewStylusButtonUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewStylusButtonUp" />
          <remover name="remove_PreviewStylusButtonUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.StylusButtonEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.StylusButtonEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewStylusButtonUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyDown">
          <apidata name="PreviewKeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyDown" />
          <remover name="remove_PreviewKeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyDown">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewKeyUp">
          <apidata name="PreviewKeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewKeyUp" />
          <remover name="remove_PreviewKeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewKeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.KeyUp">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGotKeyboardFocus">
          <apidata name="PreviewGotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGotKeyboardFocus" />
          <remover name="remove_PreviewGotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewGotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotKeyboardFocus">
          <apidata name="GotKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotKeyboardFocus" />
          <remover name="remove_GotKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.GotKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewLostKeyboardFocus">
          <apidata name="PreviewLostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewLostKeyboardFocus" />
          <remover name="remove_PreviewLostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewLostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostKeyboardFocus">
          <apidata name="LostKeyboardFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostKeyboardFocus" />
          <remover name="remove_LostKeyboardFocus" />
          <eventhandler>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.KeyboardFocusChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.LostKeyboardFocus">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTextInput">
          <apidata name="PreviewTextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTextInput" />
          <remover name="remove_PreviewTextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.PreviewTextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TextInput">
          <apidata name="TextInput" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_TextInput" />
          <remover name="remove_TextInput" />
          <eventhandler>
            <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.Windows.IInputElement.TextInput">
              <type api="T:System.Windows.IInputElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewQueryContinueDrag">
          <apidata name="PreviewQueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewQueryContinueDrag" />
          <remover name="remove_PreviewQueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.QueryContinueDrag">
          <apidata name="QueryContinueDrag" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_QueryContinueDrag" />
          <remover name="remove_QueryContinueDrag" />
          <eventhandler>
            <type api="T:System.Windows.QueryContinueDragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.QueryContinueDragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewGiveFeedback">
          <apidata name="PreviewGiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewGiveFeedback" />
          <remover name="remove_PreviewGiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GiveFeedback">
          <apidata name="GiveFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GiveFeedback" />
          <remover name="remove_GiveFeedback" />
          <eventhandler>
            <type api="T:System.Windows.GiveFeedbackEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.GiveFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragEnter">
          <apidata name="PreviewDragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragEnter" />
          <remover name="remove_PreviewDragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragOver">
          <apidata name="PreviewDragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragOver" />
          <remover name="remove_PreviewDragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDragLeave">
          <apidata name="PreviewDragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDragLeave" />
          <remover name="remove_PreviewDragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewDrop">
          <apidata name="PreviewDrop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewDrop" />
          <remover name="remove_PreviewDrop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:System.Windows.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DragEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchDown">
          <apidata name="PreviewTouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchDown" />
          <remover name="remove_PreviewTouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchDown">
          <apidata name="TouchDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchDown" />
          <remover name="remove_TouchDown" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchMove">
          <apidata name="PreviewTouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchMove" />
          <remover name="remove_PreviewTouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchMove">
          <apidata name="TouchMove" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchMove" />
          <remover name="remove_TouchMove" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.PreviewTouchUp">
          <apidata name="PreviewTouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_PreviewTouchUp" />
          <remover name="remove_PreviewTouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchUp">
          <apidata name="TouchUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchUp" />
          <remover name="remove_TouchUp" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotTouchCapture">
          <apidata name="GotTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotTouchCapture" />
          <remover name="remove_GotTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostTouchCapture">
          <apidata name="LostTouchCapture" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostTouchCapture" />
          <remover name="remove_LostTouchCapture" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchEnter">
          <apidata name="TouchEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchEnter" />
          <remover name="remove_TouchEnter" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.TouchLeave">
          <apidata name="TouchLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_TouchLeave" />
          <remover name="remove_TouchLeave" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.TouchEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseDirectlyOverChanged">
          <apidata name="IsMouseDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseDirectlyOverChanged" />
          <remover name="remove_IsMouseDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged">
          <apidata name="IsKeyboardFocusWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusWithinChanged" />
          <remover name="remove_IsKeyboardFocusWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCapturedChanged">
          <apidata name="IsMouseCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCapturedChanged" />
          <remover name="remove_IsMouseCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsMouseCaptureWithinChanged">
          <apidata name="IsMouseCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsMouseCaptureWithinChanged" />
          <remover name="remove_IsMouseCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusDirectlyOverChanged">
          <apidata name="IsStylusDirectlyOverChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusDirectlyOverChanged" />
          <remover name="remove_IsStylusDirectlyOverChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCapturedChanged">
          <apidata name="IsStylusCapturedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCapturedChanged" />
          <remover name="remove_IsStylusCapturedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsStylusCaptureWithinChanged">
          <apidata name="IsStylusCaptureWithinChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsStylusCaptureWithinChanged" />
          <remover name="remove_IsStylusCaptureWithinChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsKeyboardFocusedChanged">
          <apidata name="IsKeyboardFocusedChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsKeyboardFocusedChanged" />
          <remover name="remove_IsKeyboardFocusedChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:System.Windows.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsHitTestVisibleChanged">
          <apidata name="IsHitTestVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsHitTestVisibleChanged" />
          <remover name="remove_IsHitTestVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.IsVisibleChanged">
          <apidata name="IsVisibleChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsVisibleChanged" />
          <remover name="remove_IsVisibleChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.FocusableChanged">
          <apidata name="FocusableChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_FocusableChanged" />
          <remover name="remove_FocusableChanged" />
          <eventhandler>
            <type api="T:System.Windows.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationBoundaryFeedback">
          <apidata name="ManipulationBoundaryFeedback" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationBoundaryFeedback" />
          <remover name="remove_ManipulationBoundaryFeedback" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <apidata name="AddVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <apidata name="RemoveVisualChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="child">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
          <apidata name="IsAncestorOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
          <apidata name="IsDescendantOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <apidata name="FindCommonVisualAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="otherVisual">
              <type api="T:System.Windows.DependencyObject" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
          <apidata name="TransformToAncestor" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="ancestor">
              <type api="T:System.Windows.Media.Media3D.Visual3D" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Media3D.GeneralTransform2DTo3D" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <apidata name="TransformToDescendant" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="descendant">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="visual">
              <type api="T:System.Windows.Media.Visual" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <apidata name="PointToScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <apidata name="PointFromScreen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="point">
              <type api="T:System.Windows.Point" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Point" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualParent">
          <apidata name="VisualParent" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_VisualParent" />
          <returns>
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTransform">
          <apidata name="VisualTransform" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTransform" />
          <setter name="set_VisualTransform" />
          <returns>
            <type api="T:System.Windows.Media.Transform" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEffect">
          <apidata name="VisualEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEffect" />
          <setter name="set_VisualEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffect">
          <apidata name="VisualBitmapEffect" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffect" />
          <setter name="set_VisualBitmapEffect" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapEffectInput">
          <apidata name="VisualBitmapEffectInput" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapEffectInput" />
          <setter name="set_VisualBitmapEffectInput" />
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualCacheMode">
          <apidata name="VisualCacheMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualCacheMode" />
          <setter name="set_VisualCacheMode" />
          <returns>
            <type api="T:System.Windows.Media.CacheMode" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <apidata name="VisualScrollableAreaClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualScrollableAreaClip" />
          <setter name="set_VisualScrollableAreaClip" />
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Windows.Rect" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClip">
          <apidata name="VisualClip" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClip" />
          <setter name="set_VisualClip" />
          <returns>
            <type api="T:System.Windows.Media.Geometry" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOffset">
          <apidata name="VisualOffset" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOffset" />
          <setter name="set_VisualOffset" />
          <returns>
            <type api="T:System.Windows.Vector" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacity">
          <apidata name="VisualOpacity" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacity" />
          <setter name="set_VisualOpacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualEdgeMode">
          <apidata name="VisualEdgeMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualEdgeMode" />
          <setter name="set_VisualEdgeMode" />
          <returns>
            <type api="T:System.Windows.Media.EdgeMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualBitmapScalingMode">
          <apidata name="VisualBitmapScalingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualBitmapScalingMode" />
          <setter name="set_VisualBitmapScalingMode" />
          <returns>
            <type api="T:System.Windows.Media.BitmapScalingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualClearTypeHint">
          <apidata name="VisualClearTypeHint" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualClearTypeHint" />
          <setter name="set_VisualClearTypeHint" />
          <returns>
            <type api="T:System.Windows.Media.ClearTypeHint" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextRenderingMode">
          <apidata name="VisualTextRenderingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextRenderingMode" />
          <setter name="set_VisualTextRenderingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextRenderingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualTextHintingMode">
          <apidata name="VisualTextHintingMode" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualTextHintingMode" />
          <setter name="set_VisualTextHintingMode" />
          <returns>
            <type api="T:System.Windows.Media.TextHintingMode" ref="false" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualOpacityMask">
          <apidata name="VisualOpacityMask" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualOpacityMask" />
          <setter name="set_VisualOpacityMask" />
          <returns>
            <type api="T:System.Windows.Media.Brush" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <apidata name="VisualXSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualXSnappingGuidelines" />
          <setter name="set_VisualXSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <apidata name="VisualYSnappingGuidelines" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_VisualYSnappingGuidelines" />
          <setter name="set_VisualYSnappingGuidelines" />
          <returns>
            <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Media" />
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <apidata name="SetCurrentValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Windows.DependencyPropertyKey" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <apidata name="CoerceValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <apidata name="InvalidateProperty" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <apidata name="ShouldSerializeProperty" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="dp">
              <type api="T:System.Windows.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <apidata name="GetLocalValueEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.LocalValueEnumerator" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType">
          <apidata name="DependencyObjectType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_DependencyObjectType" />
          <returns>
            <type api="T:System.Windows.DependencyObjectType" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.DependencyObject.IsSealed">
          <apidata name="IsSealed" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsSealed" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows" />
            <type api="T:System.Windows.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:System.Windows.Threading.Dispatcher" ref="true" />
          </returns>
          <containers>
            <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
      </containers>
    </api>
    <api id="M:ET.Interface.ETPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ETPage" ref="true" />
      </containers>
    </api>
    <api id="E:ET.Interface.ETPage.ETModuleFileModify">
      <apidata name="ETModuleFileModify" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ETModuleFileModify" />
      <remover name="remove_ETModuleFileModify" />
      <eventhandler>
        <type api="T:System.Windows.RoutedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.RoutedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ETPage" ref="true" />
      </containers>
    </api>
    <api id="F:ET.Interface.ETPage.ETModuleFileModifyEvent">
      <apidata name="ETModuleFileModifyEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ETPage" ref="true" />
      </containers>
    </api>
    <api id="E:ET.Interface.ETPage.ETModuleFileSaved">
      <apidata name="ETModuleFileSaved" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ETModuleFileSaved" />
      <remover name="remove_ETModuleFileSaved" />
      <eventhandler>
        <type api="T:System.Windows.RoutedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.RoutedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ETPage" ref="true" />
      </containers>
    </api>
    <api id="F:ET.Interface.ETPage.ETModuleFileSavedEvent">
      <apidata name="ETModuleFileSavedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ETPage" ref="true" />
      </containers>
    </api>
    <api id="T:ET.Interface.ICommModule">
      <apidata name="ICommModule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:ET.Interface.ICommModule.GetNewFiles" />
        <element api="M:ET.Interface.ICommModule.LoadFile(System.Byte[],System.Int32)" />
        <element api="P:ET.Interface.ICommModule.ModuleIcon" />
        <element api="P:ET.Interface.ICommModule.FileIcon" />
      </elements>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
      </containers>
    </api>
    <api id="P:ET.Interface.ICommModule.FileIcon">
      <apidata name="FileIcon" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_FileIcon" />
      <returns>
        <type api="T:System.Windows.Media.Imaging.BitmapImage" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ICommModule" ref="true" />
      </containers>
    </api>
    <api id="M:ET.Interface.ICommModule.GetNewFiles">
      <apidata name="GetNewFiles" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:ET.Doc.ModuleFile" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ICommModule" ref="true" />
      </containers>
    </api>
    <api id="M:ET.Interface.ICommModule.LoadFile(System.Byte[],System.Int32)">
      <apidata name="LoadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="content">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="version">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ICommModule" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Interface.ICommModule.ModuleIcon">
      <apidata name="ModuleIcon" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ModuleIcon" />
      <returns>
        <type api="T:System.Windows.Media.Imaging.BitmapImage" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ICommModule" ref="true" />
      </containers>
    </api>
    <api id="T:ET.Interface.IViewDoc">
      <apidata name="IViewDoc" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:ET.Interface.IViewDoc.GetDocContent" />
        <element api="M:ET.Interface.IViewDoc.CanCopy" />
        <element api="M:ET.Interface.IViewDoc.DoCopy" />
        <element api="M:ET.Interface.IViewDoc.CanPaste" />
        <element api="M:ET.Interface.IViewDoc.DoPaste" />
        <element api="M:ET.Interface.IViewDoc.CanRedo" />
        <element api="M:ET.Interface.IViewDoc.DoRedo" />
        <element api="M:ET.Interface.IViewDoc.CanUndo" />
        <element api="M:ET.Interface.IViewDoc.DoUndo" />
        <element api="P:ET.Interface.IViewDoc.PageUI" />
        <element api="P:ET.Interface.IViewDoc.ModuleKey" />
        <element api="P:ET.Interface.IViewDoc.IsAutoSave" />
      </elements>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
      </containers>
    </api>
    <api id="M:ET.Interface.IViewDoc.CanCopy">
      <apidata name="CanCopy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="M:ET.Interface.IViewDoc.CanPaste">
      <apidata name="CanPaste" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="M:ET.Interface.IViewDoc.CanRedo">
      <apidata name="CanRedo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="M:ET.Interface.IViewDoc.CanUndo">
      <apidata name="CanUndo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="M:ET.Interface.IViewDoc.DoCopy">
      <apidata name="DoCopy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="M:ET.Interface.IViewDoc.DoPaste">
      <apidata name="DoPaste" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="M:ET.Interface.IViewDoc.DoRedo">
      <apidata name="DoRedo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="M:ET.Interface.IViewDoc.DoUndo">
      <apidata name="DoUndo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="M:ET.Interface.IViewDoc.GetDocContent">
      <apidata name="GetDocContent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Interface.IViewDoc.IsAutoSave">
      <apidata name="IsAutoSave" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsAutoSave" />
      <setter name="set_IsAutoSave" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Interface.IViewDoc.ModuleKey">
      <apidata name="ModuleKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ModuleKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Interface.IViewDoc.PageUI">
      <apidata name="PageUI" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PageUI" />
      <returns>
        <type api="T:ET.Interface.ETPage" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.IViewDoc" ref="true" />
      </containers>
    </api>
    <api id="T:ET.Interface.ModuleHeaderAttribute">
      <apidata name="ModuleHeaderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ET.Interface.ModuleHeaderAttribute.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="M:ET.Interface.ModuleHeaderAttribute.#ctor(System.String,System.String,System.Int32,System.Boolean)" />
        <element api="P:ET.Interface.ModuleHeaderAttribute.ModuleKey" />
        <element api="P:ET.Interface.ModuleHeaderAttribute.ModuleShowName" />
        <element api="P:ET.Interface.ModuleHeaderAttribute.ILevel" />
        <element api="P:ET.Interface.ModuleHeaderAttribute.IsOnlyOneFile" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
      </containers>
    </api>
    <api id="M:ET.Interface.ModuleHeaderAttribute.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="pvs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ModuleHeaderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:ET.Interface.ModuleHeaderAttribute.#ctor(System.String,System.String,System.Int32,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="moduleKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="moduleShowName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="iLevel">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isOnlyOneFile">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ModuleHeaderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Interface.ModuleHeaderAttribute.ILevel">
      <apidata name="ILevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ILevel" />
      <setter name="set_ILevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ModuleHeaderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Interface.ModuleHeaderAttribute.IsOnlyOneFile">
      <apidata name="IsOnlyOneFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsOnlyOneFile" />
      <setter name="set_IsOnlyOneFile" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ModuleHeaderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Interface.ModuleHeaderAttribute.ModuleKey">
      <apidata name="ModuleKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ModuleKey" />
      <setter name="set_ModuleKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ModuleHeaderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:ET.Interface.ModuleHeaderAttribute.ModuleShowName">
      <apidata name="ModuleShowName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ModuleShowName" />
      <setter name="set_ModuleShowName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ModuleContract" module="ModuleContract" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ET.Interface" />
        <type api="T:ET.Interface.ModuleHeaderAttribute" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>